name: Deploy on EC2 self-hosted runner (with sudo)

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Pull latest changes (optional if actions/checkout is used)
        run: git pull

      - name: Build Docker image
        run: sudo docker build -t gladiators-api .

      - name: Stop old container if exists
        run: |
          sudo docker stop gladiators-api || true
          sudo docker rm gladiators-api || true

      - name: Run new container
        run: sudo docker run -d -p 3000:3000 --name gladiators-api --restart unless-stopped gladiators-api

      - name: Verify deployment
        run: |
          sleep 10
          curl -f http://localhost:3000/health || exit 1
          echo "✅ Local health check passed"

      - name: Get public access information
        run: |
          PUBLIC_IP=$(curl -s http://169.254.169.254/latest/meta-data/public-ipv4)
          echo "🌐 Application deployed successfully!"
          echo "📍 Public access: http://$PUBLIC_IP:3000"
          echo "🔍 Health check: http://$PUBLIC_IP:3000/health"
          echo "📊 Container status:"
          sudo docker ps | grep gladiators-api

      - name: Clean up unused Docker images
        run: sudo docker image prune -f

      - name: Clean up unused Docker containers
        run: sudo docker container prune -f

      - name: Clean up unused Docker volumes
        run: sudo docker volume prune -f

      - name: Clean up unused Docker networks
        run: sudo docker network prune -f

      - name: Notify deployment success
        run: echo "🚀 Deployment successful on EC2 self-hosted runner"
